# Default values for ESCAI Framework
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# ESCAI API configuration
escai:
  image:
    registry: docker.io
    repository: escai/framework
    tag: "latest"
    pullPolicy: IfNotPresent

  replicaCount: 3

  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
    annotations: {}

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: api.escai.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: escai-api-tls
        hosts:
          - api.escai.example.com

  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Environment variables
  env:
    ESCAI_ENV: "production"
    LOG_LEVEL: "INFO"

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000

  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres_password"
    username: "escai"
    password: "escai_password"
    database: "escai_db"
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# MongoDB configuration
mongodb:
  enabled: true
  auth:
    enabled: true
    rootPassword: "admin_password"
    username: "escai"
    password: "escai_password"
    database: "escai_mongo"
  persistence:
    enabled: true
    size: 10Gi
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 5Gi
    resources:
      limits:
        cpu: 250m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

# InfluxDB configuration
influxdb:
  enabled: true
  adminUser:
    organization: "escai"
    bucket: "metrics"
    user: "admin"
    password: "admin_password"
    token: "escai-admin-token"
  persistence:
    enabled: true
    size: 20Gi
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# Neo4j configuration
neo4j:
  enabled: true
  neo4j:
    password: "escai_neo4j"
  volumes:
    data:
      mode: "defaultStorageClass"
      defaultStorageClass:
        requests:
          storage: 10Gi
  resources:
    cpu: "500m"
    memory: "2Gi"

# Prometheus configuration
prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 10Gi
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

# Grafana configuration
grafana:
  enabled: true
  adminPassword: "admin_password"
  persistence:
    enabled: true
    size: 5Gi
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Security Policy
podSecurityPolicy:
  enabled: false

# Network Policy
networkPolicy:
  enabled: false

# RBAC
rbac:
  create: true
