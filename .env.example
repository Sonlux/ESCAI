# ESCAI Framework Environment Configuration
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control!

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL
DATABASE_URL=postgresql://username:password@localhost:5432/escai_db
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=escai_db
POSTGRES_USER=escai_user
POSTGRES_PASSWORD=change_this_password

# MongoDB
MONGODB_URL=mongodb://localhost:27017/escai
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_DB=escai

# Redis
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# InfluxDB
INFLUXDB_URL=http://localhost:8086
INFLUXDB_TOKEN=your_influxdb_token_here
INFLUXDB_ORG=escai
INFLUXDB_BUCKET=monitoring

# Neo4j
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=change_this_password

# =============================================================================
# API Keys & Tokens (NEVER commit actual values!)
# =============================================================================

# GitHub Personal Access Token (for CI/CD monitoring)
GITHUB_TOKEN=ghp_your_token_here

# OpenAI API Key (if using OpenAI instrumentation)
OPENAI_API_KEY=sk-your_key_here

# Anthropic API Key (if using Claude)
ANTHROPIC_API_KEY=sk-ant-your_key_here

# =============================================================================
# Security Configuration
# =============================================================================

# Secret key for JWT token generation (generate with: python -c "import secrets; print(secrets.token_urlsafe(32))")
SECRET_KEY=generate_a_secure_random_key_here

# JWT settings
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW_SECONDS=60

# =============================================================================
# Application Configuration
# =============================================================================

# Environment mode
ENVIRONMENT=development  # development, staging, production
DEBUG=true
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# API Server
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=true

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# =============================================================================
# Monitoring & Observability
# =============================================================================

# Prometheus
PROMETHEUS_PORT=9090

# Grafana
GRAFANA_URL=http://localhost:3000
GRAFANA_API_KEY=your_grafana_api_key_here

# Codecov
CODECOV_TOKEN=your_codecov_token_here

# =============================================================================
# CI/CD & Publishing
# =============================================================================

# PyPI Publishing (stored in GitHub Secrets, not in .env)
# TEST_PYPI_API_TOKEN=pypi-xxx (GitHub Secret only)
# PYPI_API_TOKEN=pypi-xxx (GitHub Secret only)

# =============================================================================
# Framework-Specific Configuration
# =============================================================================

# LangChain
LANGCHAIN_API_KEY=your_langchain_key_here
LANGCHAIN_PROJECT=escai-monitoring

# Weights & Biases
WANDB_API_KEY=your_wandb_key_here
WANDB_PROJECT=escai
WANDB_ENTITY=your_entity_here

# =============================================================================
# Storage Configuration
# =============================================================================

# File storage path
STORAGE_PATH=./data
EXPORT_PATH=./exports
TEMP_PATH=./tmp

# Maximum upload size (MB)
MAX_UPLOAD_SIZE=10

# =============================================================================
# Testing Configuration
# =============================================================================

# Test database (automatically uses different DB for tests)
TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db
TEST_REDIS_URL=redis://localhost:6379/1

# =============================================================================
# Development Tools
# =============================================================================

# Enable profiling
ENABLE_PROFILING=false

# Enable debug toolbar
ENABLE_DEBUG_TOOLBAR=false

# Auto-reload on code changes
AUTO_RELOAD=true
