name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install -e ".[test,dev]"

      - name: Verify installation
        run: |
          python -c "import escai_framework; print(f'ESCAI Framework version: {escai_framework.__version__}')"
          python -c "from escai_framework.models import EpistemicState, BehavioralPattern; print('Models imported successfully')"
          escai --version
          pip list | grep escai

      - name: Lint with flake8
        run: |
          flake8 escai_framework --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 escai_framework --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Type check with mypy
        run: |
          mypy escai_framework --ignore-missing-imports

      - name: Security check with bandit
        run: |
          bandit -r escai_framework -f json -o bandit-report.json || true
        continue-on-error: true

      - name: Run custom test runner
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379/0
          PYTHONPATH: ${{ github.workspace }}
        run: |
          echo "Verifying package installation before tests..."
          python -c "import sys; print('Python path:', sys.path)"
          python -c "import escai_framework; print('Package location:', escai_framework.__file__)"
          echo "Running unit tests..."
          python tests/cli_test_runner.py --category unit
          echo "Running integration tests..."
          python tests/cli_test_runner.py --category integration

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.11'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

  publish-test:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: pypi-release

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  create-release:
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Changes in ${{ github.ref_name }}

            See [CHANGELOG.md](https://github.com/Sonlux/ESCAI/blob/main/CHANGELOG.md) for detailed changes.

            ## Installation

            ```bash
            pip install escai-framework==${{ github.ref_name }}
            ```

            ## PyPI Package

            This release is published to PyPI: https://pypi.org/project/escai-framework/${{ github.ref_name }}/
